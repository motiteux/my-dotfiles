#!/bin/bash

export PATH=~/.bin:~/.tools:$PATH

# Python
export PYTHONBREW_HOME=$HOME/.pythonbrew
export PYTHONBREW_ROOT=/usr/local/pythonbrew
[[ -s $PYTHONBREW_ROOT/etc/bashrc ]] && source $PYTHONBREW_ROOT/etc/bashrc

export PYTHONDONTWRITEBYTECODE=1
export PYTHONSTARTUP="$HOME/.python/pythonrc.py"

PYTHON_USED=`pythonbrew list |  grep '(*)' | awk '{print $1}'`
PYTHON_VER=`echo "${PYTHON_USED##*-}"`
if [ -z "$PYTHON_VER" ]; then
    :
else
	pip completion --bash >> ~/.bashrc.d/sub_script/profile
    
	source ~/.bashrc.d/sub_script/django_bash_completion

	export WORKON_HOME=$HOME/.virtualenvs
	export VIRTUALENVWRAPPER_TMPDIR="$WORKON_HOME/tmp"
	export VIRTUALENVWRAPPER_LOG_DIR="$WORKON_HOME"
	export VIRTUALENVWRAPPER_HOOK_DIR="$WORKON_HOME"
	export VIRTUALENVWRAPPER_VIRTUALENV=$PYTHONBREW_ROOT/pythons/Python-$PYTHON_VER/bin/virtualenv
	export VIRTUALENVWRAPPER_PYTHON=$PYTHONBREW_ROOT/pythons/Python-$PYTHON_VER/bin/python
	source $PYTHONBREW_ROOT/pythons/Python-$PYTHON_VER/bin/virtualenvwrapper.sh
	export PIP_VIRTUALENV_BASE=$WORKON_HOME # Tell pip to create its virtualenvs in $WORKON_HOME.
	export PIP_RESPECT_VIRTUALENV=true # Tell pip to automatically use the currently active virtualenv.
	export PIP_REQUIRE_VIRTUALENV=false # Tell pip to run only if there is a virtualenv currently activated
	export PIP_DOWNLOAD_CACHE=$HOME/.pip_download_cache
	export PIP_SDIST_INDEX=$PIP_DOWNLOAD_CACHE
fi

export TIMEFORMAT=$'\nreal %3R\tuser %3U\tsys %3S\tpcpu %P\n'
export HOSTFILE=$HOME/.hosts    # Put list of remote hosts in ~/.hosts ...

# Historique
#-----------

# ne pas mettre en double dans l'historique les commandes tapÃ©es 2x
export HISTCONTROL=ignoredups

# lignes de l'historique par session bash
export HISTSIZE=10000

# lignes de l'historique conservées
export HISTFILESIZE=20000
export HISTTIMEFORMAT="%H:%M > "
export HISTIGNORE="&:bg:fg:ll:h"

