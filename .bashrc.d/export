###############################################################
#                    END OF IMPORTED BASHRC                   #
###############################################################

export SHELL=/bin/bash
export PREFIX_INSTALL=/opt/software
export JAVA_HOME="/usr/java/latest"

# Python
[[ -s $HOME/.pythonbrew/etc/bashrc ]] && source $HOME/.pythonbrew/etc/bashrc
export PYTHONBREW_ROOT=/usr/local/pythonbrew

PYTHON_USED=`pythonbrew list |  grep -A1 '(*)' | awk '{print $1}'`
PYTHON_VER=`echo "${PYTHON_USED##*-}"`
if [ "X$PYTHON_VER" = "X0" ]; then
    :
else
    pip completion --bash >> ~/.bashrc.d/.profile
    
    source ~/.bashrc.d/.django_bash_completion

	export WORKON_HOME=$HOME/.virtualenvs
	export VIRTUALENVWRAPPER_TMPDIR="$WORKON_HOME/tmp"
	export VIRTUALENVWRAPPER_LOG_DIR="$WORKON_HOME"
	export VIRTUALENVWRAPPER_HOOK_DIR="$WORKON_HOME"
	export VIRTUALENVWRAPPER_VIRTUALENV=$PYTHONBREW_ROOT/pythons/Python-$PYTHON_VER/bin/virtualenv
	export VIRTUALENVWRAPPER_PYTHON=$PYTHONBREW_ROOT/pythons/Python-$PYTHON_VER/bin/python
	source $PYTHONBREW_ROOT/pythons/Python-$PYTHON_VER/bin/virtualenvwrapper.sh
	export PIP_VIRTUALENV_BASE=$WORKON_HOME # Tell pip to create its virtualenvs in $WORKON_HOME.
	export PIP_RESPECT_VIRTUALENV=true # Tell pip to automatically use the currently active virtualenv.
	export PIP_REQUIRE_VIRTUALENV=false # Tell pip to run only if there is a virtualenv currently activated
fi


export TIMEFORMAT=$'\nreal %3R\tuser %3U\tsys %3S\tpcpu %P\n'
export HOSTFILE=$HOME/.hosts    # Put list of remote hosts in ~/.hosts ...

# Historique
#-----------

# ne pas mettre en double dans l'historique les commandes tapÃ©es 2x
export HISTCONTROL=ignoredups

# lignes de l'historique par session bash
export HISTSIZE=10000

# lignes de l'historique conservées
export HISTFILESIZE=20000
export HISTTIMEFORMAT="%H:%M > "
export HISTIGNORE="&:bg:fg:ll:h"